import '@/styles/globals.css'
import type { AppProps } from 'next/app'
import { Authenticator, ThemeProvider } from '@aws-amplify/ui-react';
import { Amplify } from 'aws-amplify';
import config from '@/amplifyconfiguration.json';
import '@aws-amplify/ui-react/styles.css';
import { Josefin_Sans } from 'next/font/google'
import { TodoCreateForm } from '../ui-components'
import { generateClient } from 'aws-amplify/data';
import { Schema } from '@/amplify/data/resource';

import { useState, useEffect } from 'react';

// generate your data client using the Schema from your backend
const client = generateClient<Schema>();

const josefin_Sans = Josefin_Sans({
  weight: ["300", "400"],
  style: ["normal", "italic"],
  subsets: ["latin"],
});

// configure the Amplify client library with the configuration generated by `amplify sandbox`
Amplify.configure(config);

const theme = {
  name: 'my-theme',
  tokens: {
    fonts: {
      default: {
        variable: { value: josefin_Sans.style.fontFamily + ', courier' },
        static: { value: 'Josefin Sans, sans-serif' },
      },
    },
  },
};



function App({ Component, pageProps }: AppProps) {
  return <ThemeProvider theme={theme}>
    <Authenticator>
      {({ signOut, user }) => (
        <>
          <TodoCreateForm />
          <List />
        </>

      )}
    </Authenticator>
  </ThemeProvider>;
}


function List() {
  const [todos, setTodos] = useState<Schema['Todo'][]>([]);

  async function listTodos() {
    // fetch all todos
    const { data } = await client.models.Todo.list()
    console.log(data)
    setTodos(data);
  }

  useEffect(() => {
    listTodos();
  }, []);

  return (
    <main>
      <h1>Hello, Amplify ðŸ‘‹</h1>
      <ul>
        {todos.map((todo) => (
          <li key={todo.id}>{todo.content}</li>
        ))}
      </ul>
    </main>
  );

}
export default App
